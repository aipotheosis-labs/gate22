"""adding subscription tables

Revision ID: c5478aa084be
Revises: d84f9f8eabb2
Create Date: 2025-10-08 16:19:28.556768+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c5478aa084be'
down_revision: Union[str, None] = 'd84f9f8eabb2'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subscription_plans',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('plan_code', sa.String(length=512), nullable=False),
    sa.Column('display_name', sa.String(length=512), nullable=False),
    sa.Column('is_free', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('stripe_price_id', sa.String(length=512), nullable=True),
    sa.Column('min_seats_for_subscription', sa.Integer(), nullable=True),
    sa.Column('max_seats_for_subscription', sa.Integer(), nullable=True),
    sa.Column('max_custom_mcp_servers', sa.Integer(), nullable=True),
    sa.Column('log_retention_days', sa.Integer(), nullable=True),
    sa.Column('archived_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('plan_code'),
    sa.UniqueConstraint('stripe_price_id')
    )
    op.create_table('subscription_stripe_event_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('stripe_event_id', sa.String(length=512), nullable=False),
    sa.Column('type', sa.String(length=512), nullable=False),
    sa.Column('payload', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('received_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('process_error', sa.String(length=512), nullable=True),
    sa.Column('process_attempts', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_event_id')
    )
    op.create_table('organization_entitlement_overrides',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('seat_count', sa.Integer(), nullable=True),
    sa.Column('max_custom_mcp_servers', sa.Integer(), nullable=True),
    sa.Column('log_retention_days', sa.Integer(), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id')
    )
    op.create_table('organization_subscription_metadata',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('stripe_customer_id', sa.String(length=512), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_customer_id')
    )
    op.create_table('organization_subscriptions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('plan_code', sa.String(length=512), nullable=False),
    sa.Column('seat_count', sa.Integer(), nullable=False),
    sa.Column('stripe_subscription_status', sa.String(length=512), nullable=False),
    sa.Column('stripe_subscription_id', sa.String(length=512), nullable=False),
    sa.Column('stripe_subscription_item_id', sa.String(length=512), nullable=False),
    sa.Column('current_period_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('current_period_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('cancel_at_period_end', sa.Boolean(), nullable=False),
    sa.Column('subscription_start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['plan_code'], ['subscription_plans.plan_code'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('organization_id'),
    sa.UniqueConstraint('stripe_subscription_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('organization_subscriptions')
    op.drop_table('organization_subscription_metadata')
    op.drop_table('organization_entitlement_overrides')
    op.drop_table('subscription_stripe_event_logs')
    op.drop_table('subscription_plans')
    # ### end Alembic commands ###
