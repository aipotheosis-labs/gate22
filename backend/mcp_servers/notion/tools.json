[
  {
    "name": "NOTION__SEARCH",
    "description": "Perform a search over:\n- \"internal\": Search your entire Notion workspace and connected sources (Slack, Google Drive, Github, Jira, Teams, Sharepoint, OneDrive, or Linear).\n- \"users\": Search Notion users in the current workspace.\nUse search when you need information not available via other tools and you're unsure where it's located. If Notion AI isn't available, it falls back to a non-AI workspace search (\"type\": \"workspace_search\"). Do not use search for database integrations, views, or components. \nTry more specific queries if initial results are insufficient. After internal search, use \"fetch\" to get full contents of a page or database (shows only highlights, URL, and title). To find pages under a Notion database, use this tool with the database's URL as the data_source_url. Refer to all as \"databases\" for user clarity.",
    "tags": [],
    "tool_metadata": {
      "canonical_tool_name": "search",
      "canonical_tool_description_hash": "f325db8a0dc55001e5ba22c3412913fc1a08a0c77d42d71db2f0bcc6dba2bcf1",
      "canonical_tool_input_schema_hash": "78f0176b3ea5aa14ef61161dd1abb4a445bbd83b8a7f7b580c6738b39355d7ac"
    },
    "input_schema": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "minLength": 1,
          "description": "Semantic search query over your entire Notion workspace and connected sources\n(Slack, Google Drive, Github, Jira, Microsoft Teams, Sharepoint, OneDrive,\nor Linear). For best results, don't provide more than one question per tool call.\nUse a separate \"search\" tool call for each search you want to perform.\nAlternatively, the query can be a substring or keyword to find users by matching\nagainst their name or email address. For example: \"john\" or \"john@example.com\""
        },
        "query_type": {
          "type": "string",
          "enum": ["internal", "user"],
          "description": "Specify type of the query as either \"internal\" or \"user\". Always include this input if performing\n\"user\" search."
        },
        "data_source_url": {
          "type": "string",
          "description": "Optionally, provide the URL of a Data source to search. This will perform a semantic search over\nthe pages in the Data Source. Note: must be a Data Source, not a Database. <data-source> tags are\npart of the Notion flavored Markdown format returned by tools like fetch. The full spec is\navailable in the create-pages tool description."
        },
        "page_url": {
          "type": "string",
          "description": "Optionally, provide the URL or ID of a page to search within. This will perform a semantic search\nover the content within and under the specified page. Accepts either a full page URL\n(e.g. https://notion.so/workspace/Page-Title-1234567890) or just the page ID (UUIDv4) with or\nwithout dashes."
        },
        "teamspace_id": {
          "type": "string",
          "description": "Optionally, provide the ID of a teamspace to restrict search results to. This will perform a search\nover content within the specified teamspace only. Accepts the teamspace ID (UUIDv4) with or\nwithout dashes."
        }
      },
      "required": ["query"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "NOTION__FETCH",
    "description": "Retrieves details about a Notion entity by its URL or ID. You can fetch the following types:  \n- Page (from a <page> block or <mention-page> mention)\n- Database (from a <database> block or <mention-database> mention)\n\nUse the \"fetch\" tool when you need to view details of an existing Notion entity and you have its URL or ID. Provide the Notion entity\u2019s URL or ID in the `id` parameter. To fetch multiple entities, make multiple calls.  \n\nPage content is returned in enhanced Markdown (a superset of standard Markdown). Notion only supports Databases (not public Data Sources); treat the database details as the entire data source.  \n\nExamples:  \n1. Fetch a page by URL: `{ \"id\": \"https://www.notion.so/workspace/Page-1234567890abcdef\" }`  \n2. Fetch by ID: `{ \"id\": \"12345678-90ab-cdef-1234-567890abcdef\" }`  \n3. Fetch a database: `{ \"id\": \"https://www.notion.so/workspace/DB-abcdef1234567890\" }`",
    "tags": [],
    "tool_metadata": {
      "canonical_tool_name": "fetch",
      "canonical_tool_description_hash": "c4b0aa4bdb3ceaff1c636e7e693b28baa2c2db562bd5721b61adf5e73040e061",
      "canonical_tool_input_schema_hash": "d14771ef99cf6c6473cd0acde7b8d5a7993a597836984c1f215c8d8f765c53c2"
    },
    "input_schema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID or URL of the Notion page to fetch"
        }
      },
      "required": ["id"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "NOTION__CREATE_PAGES",
    "description": "Creates one or more Notion pages with specified properties and content. Use \"create-pages\" for new pages that don't exist yet. Always include a title property in each entry of the pages array; otherwise, the page title will be blank even if content is present. Do not duplicate the page title in the content. When creating pages in a database, property names must match its schema\u2014use the fetch tool with a database URL to get this schema. You may use the generic \"title\" property; it will be mapped to the actual database schema title property. All created pages share the same parent, which can be a Notion page or database. If parent is omitted, pages are private, workspace-level. Only databases define schemas; ignore \"data sources.\" Use Notion-flavored Markdown for content, supporting headings, lists, tables, callouts, media embeds, colors, mentions, and more.",
    "tags": [],
    "tool_metadata": {
      "canonical_tool_name": "create-pages",
      "canonical_tool_description_hash": "0d171ec2a5b8af33f8dc8540f6471edf6fafb5288eca8c894deec2903ff8a0b1",
      "canonical_tool_input_schema_hash": "aac4aae9924958126352c74a00d0ca77a8c424caf7189a0e6035c1fe75999714"
    },
    "input_schema": {
      "type": "object",
      "properties": {
        "pages": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "properties": {
                "type": "object",
                "additionalProperties": {
                  "type": ["string", "number", "null"]
                },
                "description": "The properties of the new page, which is a JSON map of property names to SQLite values.\nFor pages in a database, use the SQLite schema definition shown in <database>.\nFor pages outside of a database, the only allowed property is \"title\", which is the title of the page and is automatically shown at the top of the page as a large heading."
              },
              "content": {
                "type": "string",
                "description": "The content of the new page, using Notion Markdown."
              }
            },
            "additionalProperties": false
          },
          "maxItems": 100,
          "description": "The pages to create."
        },
        "parent": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "page_id": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": ["page_id"]
                }
              },
              "required": ["page_id"],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "database_id": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": ["database_id"]
                }
              },
              "required": ["database_id"],
              "additionalProperties": false
            }
          ],
          "description": "The parent under which the new pages will be created. This can be a page or a database. If omitted, the new pages will be created as private pages at the workspace level."
        }
      },
      "required": ["pages"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "NOTION__UPDATE_PAGE",
    "description": "Update a Notion page's properties or content.  \nProperties are a JSON map of property names to SQLite values. For database pages, use the schema in <database>; for pages outside a database, only the \"title\" property is allowed.  \nContent is a string in Notion-flavored Markdown (see \"create-pages\" for Markdown spec). Before updating content, use \"fetch\" to get current page content to identify correct Markdown snippets for \"replace_content_range\" or \"insert_content_after\" commands.  \nExamples:  \n1. Update properties:  \n{\"page_id\":\"...\", \"command\":\"update_properties\", \"properties\":{\"title\":\"...\",\"status\":\"In Progress\"}}  \n2. Replace all content:  \n{\"page_id\":\"...\", \"command\":\"replace_content\", \"new_str\":\"...\"}  \n3. Replace specific content:  \n{\"page_id\":\"...\", \"command\":\"replace_content_range\", \"selection_with_ellipsis\":\"start...end\", \"new_str\":\"...\"}  \nUse unique, concise snippets for content selection; avoid ambiguity.  \n4. Insert content:  \n{\"page_id\":\"...\", \"command\":\"insert_content_after\", \"selection_with_ellipsis\":\"start...end\",\"new_str\":\"...\"}",
    "tags": [],
    "tool_metadata": {
      "canonical_tool_name": "update-page",
      "canonical_tool_description_hash": "b42e9107edc5aec85d5c3653a8b4db6b172a6298197bdb83bc5ed090ad8c8dd2",
      "canonical_tool_input_schema_hash": "4fdb165ce02d6cbd6ab881a0535636d96fb14a5656407616d413eabac569e54a"
    },
    "input_schema": {
      "type": "object",
      "properties": {
        "data": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "page_id": {
                  "type": "string",
                  "description": "The ID of the page to update, with or without dashes."
                }
              },
              "required": ["page_id"]
            },
            {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "command": {
                      "type": "string",
                      "enum": ["update_properties"]
                    },
                    "properties": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "A JSON object that updates the page's properties.\nFor pages in a database, use the SQLite schema definition shown in <database>.\nFor pages outside of a database, the only allowed property is \"title\", which is the title of the page in inline markdown format.\nUse null to remove a property's value."
                    }
                  },
                  "required": ["command", "properties"],
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "command": {
                      "type": "string",
                      "enum": ["replace_content"]
                    },
                    "new_str": {
                      "type": "string",
                      "description": "The new string to replace all content with."
                    }
                  },
                  "required": ["command", "new_str"],
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "command": {
                      "type": "string",
                      "enum": ["replace_content_range"]
                    },
                    "selection_with_ellipsis": {
                      "type": "string",
                      "description": "Unique start and end snippet of the string to replace in the page content, including whitespace.\nDO NOT provide the entire string to replace. Instead, provide up to the first ~10 characters of the string to replace, an ellipsis, and then up to the last ~10 characters of the string to replace.\nMake sure you provide enough of the start and end snippet to uniquely identify the string to replace.\nFor example, to replace an entire section, use \"old_start_and_end_snippet\":\"# Section heading...last paragraph.\""
                    },
                    "new_str": {
                      "type": "string",
                      "description": "The new string to replace the old string with."
                    }
                  },
                  "required": ["command", "selection_with_ellipsis", "new_str"],
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "command": {
                      "type": "string",
                      "enum": ["insert_content_after"]
                    },
                    "selection_with_ellipsis": {
                      "type": "string",
                      "description": "Unique start and end snippet of the string to match in the page content, including whitespace.\nDO NOT provide the entire string to match. Instead, provide up to the first ~10 characters of the string to match, an ellipsis, and then up to the last ~10 characters of the string to match.\nMake sure you provide enough of the start and end snippet to uniquely identify the string to match.\nFor example, to match an entire section, use \"selection_with_ellipsis\":\"# Section heading...last paragraph.\""
                    },
                    "new_str": {
                      "type": "string",
                      "description": "The new content to insert."
                    }
                  },
                  "required": ["command", "selection_with_ellipsis", "new_str"],
                  "additionalProperties": false
                }
              ]
            }
          ],
          "description": "The data required for updating a page"
        }
      },
      "required": ["data"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "NOTION__MOVE_PAGES",
    "description": "Move one or more Notion pages or databases to a new parent.",
    "tags": [],
    "tool_metadata": {
      "canonical_tool_name": "move-pages",
      "canonical_tool_description_hash": "15370373cf2ba38d1db810e4bdde9d223b004e74ba1509c93647f78ef8bc59a3",
      "canonical_tool_input_schema_hash": "9bd9f06475edebe84e0f548a4617f4bdc4957316834d538e7ba5af801c5a2d7c"
    },
    "input_schema": {
      "type": "object",
      "properties": {
        "page_or_database_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "maxItems": 100,
          "description": "An array of up to 100 page or database IDs to move. IDs are v4 UUIDs and can be supplied with or without dashes (e.g. extracted from a <page> or <database> URL given by the \"search\" or \"view\" tool). Data Sources under Databases can't be moved individually."
        },
        "new_parent": {
          "anyOf": [
            {
              "type": "object",
              "properties": {
                "page_id": {
                  "type": "string",
                  "description": "The ID of the parent page (with or without dashes), for example, 195de9221179449fab8075a27c979105"
                },
                "type": {
                  "type": "string",
                  "enum": ["page_id"]
                }
              },
              "required": ["page_id"],
              "additionalProperties": false
            },
            {
              "type": "object",
              "properties": {
                "database_id": {
                  "type": "string",
                  "description": "The ID of the parent database (with or without dashes), for example, 195de9221179449fab8075a27c979105"
                },
                "type": {
                  "type": "string",
                  "enum": ["database_id"]
                }
              },
              "required": ["database_id"],
              "additionalProperties": false
            }
          ],
          "description": "The new parent under which the pages will be moved. This can be a page or a database."
        }
      },
      "required": ["page_or_database_ids", "new_parent"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "NOTION__DUPLICATE_PAGE",
    "description": "Duplicate a Notion page. The page must be within the current workspace, and you must have permission to access it. The duplication completes asynchronously, so do not rely on the new page identified by the returned ID or URL to be populated immediately. Let the user know that the duplication is in progress and that they can check back later using the 'fetch' tool or by clicking the returned URL and viewing it in the Notion app.",
    "tags": [],
    "tool_metadata": {
      "canonical_tool_name": "duplicate-page",
      "canonical_tool_description_hash": "8f7eaad7e37ac338a95cead7435f1f2323c4c09ed905e806d6fa207138c0da9b",
      "canonical_tool_input_schema_hash": "2369c24ec8e85f681982c8e4e1af2fb10bfd65dabf218d06be2ac2a7a76cb4c0"
    },
    "input_schema": {
      "type": "object",
      "properties": {
        "page_id": {
          "type": "string",
          "description": "The ID of the page to duplicate. This is a v4 UUID, with or without dashes, and can be parsed from a Notion page URL."
        }
      },
      "required": ["page_id"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "NOTION__CREATE_DATABASE",
    "description": "Creates a new Notion database with the specified properties.",
    "tags": [],
    "tool_metadata": {
      "canonical_tool_name": "create-database",
      "canonical_tool_description_hash": "c82e796594a546cd91be2666e576e31ca0e57b5667931b358fcb87949a049b1c",
      "canonical_tool_input_schema_hash": "e51282c221780672d1aa5f23d8724cb5fc8ba9eaae7a6f21de1a3a1f4d2895bf"
    },
    "input_schema": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "additionalProperties": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "description": {
                    "anyOf": [
                      {
                        "type": "string",
                        "maxLength": 280
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The description of the property."
                  }
                }
              },
              {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["number"]
                      },
                      "number": {
                        "type": "object",
                        "properties": {
                          "format": {
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 18
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "required": ["number"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["formula"]
                      },
                      "formula": {
                        "type": "object",
                        "properties": {
                          "expression": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "required": ["formula"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["select"]
                      },
                      "select": {
                        "type": "object",
                        "properties": {
                          "options": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "color": {
                                  "type": "string",
                                  "enum": [
                                    "default",
                                    "gray",
                                    "brown",
                                    "orange",
                                    "yellow",
                                    "green",
                                    "blue",
                                    "purple",
                                    "pink",
                                    "red"
                                  ]
                                },
                                "description": {
                                  "type": ["string", "null"]
                                }
                              },
                              "required": ["name"],
                              "additionalProperties": false
                            },
                            "maxItems": 100
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "required": ["select"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["multi_select"]
                      },
                      "multi_select": {
                        "type": "object",
                        "properties": {
                          "options": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "color": {
                                  "type": "string",
                                  "enum": [
                                    "default",
                                    "gray",
                                    "brown",
                                    "orange",
                                    "yellow",
                                    "green",
                                    "blue",
                                    "purple",
                                    "pink",
                                    "red"
                                  ]
                                },
                                "description": {
                                  "type": ["string", "null"]
                                }
                              },
                              "required": ["name"],
                              "additionalProperties": false
                            },
                            "maxItems": 100
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "required": ["multi_select"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["status"]
                      },
                      "status": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      }
                    },
                    "required": ["status"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["relation"]
                      },
                      "relation": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "database_id": {
                                "type": "string"
                              }
                            },
                            "required": ["database_id"]
                          },
                          {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "single_property": {
                                    "type": "object",
                                    "properties": {},
                                    "additionalProperties": false
                                  }
                                },
                                "required": ["single_property"],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "dual_property": {
                                    "type": "object",
                                    "properties": {
                                      "synced_property_id": {
                                        "type": "string"
                                      },
                                      "synced_property_name": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "required": ["dual_property"],
                                "additionalProperties": false
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "required": ["relation"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["rollup"]
                      },
                      "rollup": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "function": {
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 17
                              }
                            },
                            "required": ["function"]
                          },
                          {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "relation_property_name": {
                                    "type": "string"
                                  },
                                  "rollup_property_name": {
                                    "type": "string"
                                  }
                                },
                                "required": ["relation_property_name", "rollup_property_name"],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "relation_property_id": {
                                    "type": "string"
                                  },
                                  "rollup_property_name": {
                                    "type": "string"
                                  }
                                },
                                "required": ["relation_property_id", "rollup_property_name"],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "relation_property_name": {
                                    "type": "string"
                                  },
                                  "rollup_property_id": {
                                    "type": "string"
                                  }
                                },
                                "required": ["relation_property_name", "rollup_property_id"],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "relation_property_id": {
                                    "type": "string"
                                  },
                                  "rollup_property_id": {
                                    "type": "string"
                                  }
                                },
                                "required": ["relation_property_id", "rollup_property_id"],
                                "additionalProperties": false
                              }
                            ]
                          }
                        ]
                      }
                    },
                    "required": ["rollup"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["unique_id"]
                      },
                      "unique_id": {
                        "type": "object",
                        "properties": {
                          "prefix": {
                            "type": ["string", "null"]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "required": ["unique_id"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["title"]
                      },
                      "title": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      }
                    },
                    "required": ["title"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["rich_text"]
                      },
                      "rich_text": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      }
                    },
                    "required": ["rich_text"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["url"]
                      },
                      "url": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      }
                    },
                    "required": ["url"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["people"]
                      },
                      "people": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      }
                    },
                    "required": ["people"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["files"]
                      },
                      "files": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      }
                    },
                    "required": ["files"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["email"]
                      },
                      "email": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      }
                    },
                    "required": ["email"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["phone_number"]
                      },
                      "phone_number": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      }
                    },
                    "required": ["phone_number"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["date"]
                      },
                      "date": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      }
                    },
                    "required": ["date"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["checkbox"]
                      },
                      "checkbox": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      }
                    },
                    "required": ["checkbox"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["created_by"]
                      },
                      "created_by": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      }
                    },
                    "required": ["created_by"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["created_time"]
                      },
                      "created_time": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      }
                    },
                    "required": ["created_time"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["last_edited_by"]
                      },
                      "last_edited_by": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      }
                    },
                    "required": ["last_edited_by"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["last_edited_time"]
                      },
                      "last_edited_time": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": false
                      }
                    },
                    "required": ["last_edited_time"],
                    "additionalProperties": false
                  }
                ]
              }
            ]
          },
          "description": "The property schema of the new database. Must at least have a title property."
        },
        "parent": {
          "type": "object",
          "properties": {
            "page_id": {
              "type": "string",
              "description": "The ID of the parent page (with or without dashes), for example, 195de9221179449fab8075a27c979105"
            },
            "type": {
              "type": "string",
              "enum": ["page_id"]
            }
          },
          "required": ["page_id"],
          "additionalProperties": false,
          "description": "The parent under which to create the new database. If omitted, the database will be created as a private page at the workspace level."
        },
        "title": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "annotations": {
                    "type": "object",
                    "properties": {
                      "bold": {
                        "type": "boolean",
                        "description": "Whether the text is formatted as bold."
                      },
                      "italic": {
                        "type": "boolean",
                        "description": "Whether the text is formatted as italic."
                      },
                      "strikethrough": {
                        "type": "boolean",
                        "description": "Whether the text is formatted with a strikethrough."
                      },
                      "underline": {
                        "type": "boolean",
                        "description": "Whether the text is formatted with an underline."
                      },
                      "code": {
                        "type": "boolean",
                        "description": "Whether the text is formatted as code."
                      },
                      "color": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 18
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["text"]
                      },
                      "text": {
                        "type": "object",
                        "properties": {
                          "content": {
                            "type": "string",
                            "maxLength": 2000,
                            "description": "The actual text content of the text."
                          },
                          "link": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  }
                                },
                                "required": ["url"],
                                "additionalProperties": false
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "description": "An object with information about any inline link in this text, if included."
                          }
                        },
                        "required": ["content"],
                        "additionalProperties": false,
                        "description": "If a rich text object's type value is `text`, then the corresponding text field contains an object including the text content and any inline link."
                      }
                    },
                    "required": ["text"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["mention"]
                      },
                      "mention": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["user"]
                              },
                              "user": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "object": {
                                        "type": "string",
                                        "enum": ["user"],
                                        "description": "The user object type name."
                                      }
                                    },
                                    "required": ["id"],
                                    "additionalProperties": false
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": ["string", "null"],
                                            "description": "The name of the user."
                                          },
                                          "object": {
                                            "type": "string",
                                            "enum": ["user"],
                                            "description": "The user object type name."
                                          },
                                          "avatar_url": {
                                            "type": ["string", "null"],
                                            "description": "The avatar URL of the user."
                                          }
                                        },
                                        "required": ["id"]
                                      },
                                      {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": ["person"]
                                              },
                                              "person": {
                                                "type": "object",
                                                "properties": {
                                                  "email": {
                                                    "type": "string",
                                                    "description": "The email of the person."
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "required": ["person"],
                                            "additionalProperties": false
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": ["bot"]
                                              },
                                              "bot": {
                                                "type": "object",
                                                "properties": {
                                                  "owner": {
                                                    "anyOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "user": {
                                                            "anyOf": [
                                                              {
                                                                "type": "object",
                                                                "properties": {
                                                                  "email": {
                                                                    "type": "string",
                                                                    "description": "The email of the person."
                                                                  }
                                                                },
                                                                "required": ["email"],
                                                                "additionalProperties": false
                                                              },
                                                              {
                                                                "type": "object",
                                                                "properties": {
                                                                  "id": {
                                                                    "type": "string"
                                                                  },
                                                                  "object": {
                                                                    "type": "string",
                                                                    "enum": ["user"],
                                                                    "description": "The user object type name."
                                                                  }
                                                                },
                                                                "required": ["id"],
                                                                "additionalProperties": false
                                                              }
                                                            ],
                                                            "description": "Details about the owner of the bot, when the `type` of the owner is `user`. This means the bot is for a public integration."
                                                          }
                                                        },
                                                        "required": ["user"],
                                                        "additionalProperties": false
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "workspace": {
                                                            "type": "string",
                                                            "enum": ["true"],
                                                            "description": "Details about the owner of the bot, when the `type` of the owner is `workspace`. This means the bot is for an internal integration."
                                                          }
                                                        },
                                                        "required": ["workspace"],
                                                        "additionalProperties": false
                                                      }
                                                    ]
                                                  },
                                                  "workspace_name": {
                                                    "type": ["string", "null"],
                                                    "description": "The name of the bot's workspace."
                                                  },
                                                  "workspace_limits": {
                                                    "type": "object",
                                                    "properties": {
                                                      "max_file_upload_size_in_bytes": {
                                                        "type": "integer",
                                                        "description": "The maximum allowable size of a file upload, in bytes"
                                                      }
                                                    },
                                                    "required": ["max_file_upload_size_in_bytes"],
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "required": ["bot"],
                                            "additionalProperties": false
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "description": "Details of the user mention."
                              }
                            },
                            "required": ["user"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["date"]
                              },
                              "date": {
                                "type": "object",
                                "properties": {
                                  "start": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "The start date of the date object."
                                  },
                                  "end": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "format": "date"
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "description": "The end date of the date object, if any."
                                  },
                                  "time_zone": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "minLength": 2,
                                        "maxLength": 32
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "description": "The time zone of the date object, if any. E.g. America/Los_Angeles, Europe/London, etc."
                                  }
                                },
                                "required": ["start"],
                                "additionalProperties": false
                              }
                            },
                            "required": ["date"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["page"]
                              },
                              "page": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": ["id"],
                                "additionalProperties": false,
                                "description": "Details of the page mention."
                              }
                            },
                            "required": ["page"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["database"]
                              },
                              "database": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": ["id"],
                                "additionalProperties": false,
                                "description": "Details of the database mention."
                              }
                            },
                            "required": ["database"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["template_mention"]
                              },
                              "template_mention": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": ["template_mention_date"]
                                      },
                                      "template_mention_date": {
                                        "type": "string",
                                        "enum": ["today", "now"],
                                        "description": "The date of the template mention."
                                      }
                                    },
                                    "required": ["template_mention_date"],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": ["template_mention_user"]
                                      },
                                      "template_mention_user": {
                                        "type": "string",
                                        "enum": ["me"],
                                        "description": "The user of the template mention."
                                      }
                                    },
                                    "required": ["template_mention_user"],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "required": ["template_mention"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["custom_emoji"]
                              },
                              "custom_emoji": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the custom emoji."
                                  },
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the custom emoji."
                                  }
                                },
                                "required": ["id"],
                                "additionalProperties": false,
                                "description": "Details of the custom emoji mention."
                              }
                            },
                            "required": ["custom_emoji"],
                            "additionalProperties": false
                          }
                        ],
                        "description": "Mention objects represent an inline mention of a database, date, link preview mention, page, template mention, or user. A mention is created in the Notion UI when a user types `@` followed by the name of the reference."
                      }
                    },
                    "required": ["mention"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["equation"]
                      },
                      "equation": {
                        "type": "object",
                        "properties": {
                          "expression": {
                            "type": "string",
                            "description": "A KaTeX compatible string."
                          }
                        },
                        "required": ["expression"],
                        "additionalProperties": false,
                        "description": "Notion supports inline LaTeX equations as rich text objects with a type value of `equation`."
                      }
                    },
                    "required": ["equation"],
                    "additionalProperties": false
                  }
                ]
              }
            ]
          },
          "maxItems": 100,
          "description": "The title of the new database, as a rich text object."
        },
        "description": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "annotations": {
                    "type": "object",
                    "properties": {
                      "bold": {
                        "type": "boolean",
                        "description": "Whether the text is formatted as bold."
                      },
                      "italic": {
                        "type": "boolean",
                        "description": "Whether the text is formatted as italic."
                      },
                      "strikethrough": {
                        "type": "boolean",
                        "description": "Whether the text is formatted with a strikethrough."
                      },
                      "underline": {
                        "type": "boolean",
                        "description": "Whether the text is formatted with an underline."
                      },
                      "code": {
                        "type": "boolean",
                        "description": "Whether the text is formatted as code."
                      },
                      "color": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 18
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["text"]
                      },
                      "text": {
                        "type": "object",
                        "properties": {
                          "content": {
                            "type": "string",
                            "maxLength": 2000,
                            "description": "The actual text content of the text."
                          },
                          "link": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  }
                                },
                                "required": ["url"],
                                "additionalProperties": false
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "description": "An object with information about any inline link in this text, if included."
                          }
                        },
                        "required": ["content"],
                        "additionalProperties": false,
                        "description": "If a rich text object's type value is `text`, then the corresponding text field contains an object including the text content and any inline link."
                      }
                    },
                    "required": ["text"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["mention"]
                      },
                      "mention": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["user"]
                              },
                              "user": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "object": {
                                        "type": "string",
                                        "enum": ["user"],
                                        "description": "The user object type name."
                                      }
                                    },
                                    "required": ["id"],
                                    "additionalProperties": false
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": ["string", "null"],
                                            "description": "The name of the user."
                                          },
                                          "object": {
                                            "type": "string",
                                            "enum": ["user"],
                                            "description": "The user object type name."
                                          },
                                          "avatar_url": {
                                            "type": ["string", "null"],
                                            "description": "The avatar URL of the user."
                                          }
                                        },
                                        "required": ["id"]
                                      },
                                      {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": ["person"]
                                              },
                                              "person": {
                                                "type": "object",
                                                "properties": {
                                                  "email": {
                                                    "type": "string",
                                                    "description": "The email of the person."
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "required": ["person"],
                                            "additionalProperties": false
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": ["bot"]
                                              },
                                              "bot": {
                                                "type": "object",
                                                "properties": {
                                                  "owner": {
                                                    "anyOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "user": {
                                                            "anyOf": [
                                                              {
                                                                "type": "object",
                                                                "properties": {
                                                                  "email": {
                                                                    "type": "string",
                                                                    "description": "The email of the person."
                                                                  }
                                                                },
                                                                "required": ["email"],
                                                                "additionalProperties": false
                                                              },
                                                              {
                                                                "type": "object",
                                                                "properties": {
                                                                  "id": {
                                                                    "type": "string"
                                                                  },
                                                                  "object": {
                                                                    "type": "string",
                                                                    "enum": ["user"],
                                                                    "description": "The user object type name."
                                                                  }
                                                                },
                                                                "required": ["id"],
                                                                "additionalProperties": false
                                                              }
                                                            ],
                                                            "description": "Details about the owner of the bot, when the `type` of the owner is `user`. This means the bot is for a public integration."
                                                          }
                                                        },
                                                        "required": ["user"],
                                                        "additionalProperties": false
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "workspace": {
                                                            "type": "string",
                                                            "enum": ["true"],
                                                            "description": "Details about the owner of the bot, when the `type` of the owner is `workspace`. This means the bot is for an internal integration."
                                                          }
                                                        },
                                                        "required": ["workspace"],
                                                        "additionalProperties": false
                                                      }
                                                    ]
                                                  },
                                                  "workspace_name": {
                                                    "type": ["string", "null"],
                                                    "description": "The name of the bot's workspace."
                                                  },
                                                  "workspace_limits": {
                                                    "type": "object",
                                                    "properties": {
                                                      "max_file_upload_size_in_bytes": {
                                                        "type": "integer",
                                                        "description": "The maximum allowable size of a file upload, in bytes"
                                                      }
                                                    },
                                                    "required": ["max_file_upload_size_in_bytes"],
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "required": ["bot"],
                                            "additionalProperties": false
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "description": "Details of the user mention."
                              }
                            },
                            "required": ["user"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["date"]
                              },
                              "date": {
                                "type": "object",
                                "properties": {
                                  "start": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "The start date of the date object."
                                  },
                                  "end": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "format": "date"
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "description": "The end date of the date object, if any."
                                  },
                                  "time_zone": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "minLength": 2,
                                        "maxLength": 32
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "description": "The time zone of the date object, if any. E.g. America/Los_Angeles, Europe/London, etc."
                                  }
                                },
                                "required": ["start"],
                                "additionalProperties": false
                              }
                            },
                            "required": ["date"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["page"]
                              },
                              "page": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": ["id"],
                                "additionalProperties": false,
                                "description": "Details of the page mention."
                              }
                            },
                            "required": ["page"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["database"]
                              },
                              "database": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": ["id"],
                                "additionalProperties": false,
                                "description": "Details of the database mention."
                              }
                            },
                            "required": ["database"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["template_mention"]
                              },
                              "template_mention": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": ["template_mention_date"]
                                      },
                                      "template_mention_date": {
                                        "type": "string",
                                        "enum": ["today", "now"],
                                        "description": "The date of the template mention."
                                      }
                                    },
                                    "required": ["template_mention_date"],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": ["template_mention_user"]
                                      },
                                      "template_mention_user": {
                                        "type": "string",
                                        "enum": ["me"],
                                        "description": "The user of the template mention."
                                      }
                                    },
                                    "required": ["template_mention_user"],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "required": ["template_mention"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["custom_emoji"]
                              },
                              "custom_emoji": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the custom emoji."
                                  },
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the custom emoji."
                                  }
                                },
                                "required": ["id"],
                                "additionalProperties": false,
                                "description": "Details of the custom emoji mention."
                              }
                            },
                            "required": ["custom_emoji"],
                            "additionalProperties": false
                          }
                        ],
                        "description": "Mention objects represent an inline mention of a database, date, link preview mention, page, template mention, or user. A mention is created in the Notion UI when a user types `@` followed by the name of the reference."
                      }
                    },
                    "required": ["mention"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["equation"]
                      },
                      "equation": {
                        "type": "object",
                        "properties": {
                          "expression": {
                            "type": "string",
                            "description": "A KaTeX compatible string."
                          }
                        },
                        "required": ["expression"],
                        "additionalProperties": false,
                        "description": "Notion supports inline LaTeX equations as rich text objects with a type value of `equation`."
                      }
                    },
                    "required": ["equation"],
                    "additionalProperties": false
                  }
                ]
              }
            ]
          },
          "maxItems": 100,
          "description": "The description of the new database, as a rich text object."
        }
      },
      "required": ["properties"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "NOTION__UPDATE_DATABASE",
    "description": "Update a Notion database\u2019s properties, name, description, or other attributes. The tool returns a rendered Markdown string showing the updated database structure, including properties, data sources, and schema info. Database properties define columns/fields with types (text, number, select, etc.) and config options.  \nExamples:  \n1. Change title/description  \n2. Add property  \n3. Rename property  \n4. Remove property  \n5. Change to inline/full page  \n6. Move to trash (**Warning: cannot be undone without Notion UI\u2013confirm with user!**)  \nCommon property types include: title (main), rich_text, number, select, multi_select, date, people, checkbox, url, email, phone_number, formula, relation, rollup.  \nNotes: Can\u2019t add/remove title, only one unique_id allowed, synced DBs cannot be updated. Use \u201cfetch\u201d tool first to see schema.",
    "tags": [],
    "tool_metadata": {
      "canonical_tool_name": "update-database",
      "canonical_tool_description_hash": "3914cc19ad84fdffa50808b417a507a3d112d1997e2ff7e6bb9959c3a0efd00e",
      "canonical_tool_input_schema_hash": "ab86267c41e7b49e88dabaaf5ab4fc118bc8b7e8207843c71d9730fea6a49fd7"
    },
    "input_schema": {
      "type": "object",
      "properties": {
        "database_id": {
          "type": "string",
          "description": "The ID of the database to update. This is a UUID v4, with or without dashes, and can be parsed from a database URL."
        },
        "title": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "annotations": {
                    "type": "object",
                    "properties": {
                      "bold": {
                        "type": "boolean",
                        "description": "Whether the text is formatted as bold."
                      },
                      "italic": {
                        "type": "boolean",
                        "description": "Whether the text is formatted as italic."
                      },
                      "strikethrough": {
                        "type": "boolean",
                        "description": "Whether the text is formatted with a strikethrough."
                      },
                      "underline": {
                        "type": "boolean",
                        "description": "Whether the text is formatted with an underline."
                      },
                      "code": {
                        "type": "boolean",
                        "description": "Whether the text is formatted as code."
                      },
                      "color": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 18
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["text"]
                      },
                      "text": {
                        "type": "object",
                        "properties": {
                          "content": {
                            "type": "string",
                            "maxLength": 2000,
                            "description": "The actual text content of the text."
                          },
                          "link": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  }
                                },
                                "required": ["url"],
                                "additionalProperties": false
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "description": "An object with information about any inline link in this text, if included."
                          }
                        },
                        "required": ["content"],
                        "additionalProperties": false,
                        "description": "If a rich text object's type value is `text`, then the corresponding text field contains an object including the text content and any inline link."
                      }
                    },
                    "required": ["text"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["mention"]
                      },
                      "mention": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["user"]
                              },
                              "user": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "object": {
                                        "type": "string",
                                        "enum": ["user"],
                                        "description": "The user object type name."
                                      }
                                    },
                                    "required": ["id"],
                                    "additionalProperties": false
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": ["string", "null"],
                                            "description": "The name of the user."
                                          },
                                          "object": {
                                            "type": "string",
                                            "enum": ["user"],
                                            "description": "The user object type name."
                                          },
                                          "avatar_url": {
                                            "type": ["string", "null"],
                                            "description": "The avatar URL of the user."
                                          }
                                        },
                                        "required": ["id"]
                                      },
                                      {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": ["person"]
                                              },
                                              "person": {
                                                "type": "object",
                                                "properties": {
                                                  "email": {
                                                    "type": "string",
                                                    "description": "The email of the person."
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "required": ["person"],
                                            "additionalProperties": false
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": ["bot"]
                                              },
                                              "bot": {
                                                "type": "object",
                                                "properties": {
                                                  "owner": {
                                                    "anyOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "user": {
                                                            "anyOf": [
                                                              {
                                                                "type": "object",
                                                                "properties": {
                                                                  "email": {
                                                                    "type": "string",
                                                                    "description": "The email of the person."
                                                                  }
                                                                },
                                                                "required": ["email"],
                                                                "additionalProperties": false
                                                              },
                                                              {
                                                                "type": "object",
                                                                "properties": {
                                                                  "id": {
                                                                    "type": "string"
                                                                  },
                                                                  "object": {
                                                                    "type": "string",
                                                                    "enum": ["user"],
                                                                    "description": "The user object type name."
                                                                  }
                                                                },
                                                                "required": ["id"],
                                                                "additionalProperties": false
                                                              }
                                                            ],
                                                            "description": "Details about the owner of the bot, when the `type` of the owner is `user`. This means the bot is for a public integration."
                                                          }
                                                        },
                                                        "required": ["user"],
                                                        "additionalProperties": false
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "workspace": {
                                                            "type": "string",
                                                            "enum": ["true"],
                                                            "description": "Details about the owner of the bot, when the `type` of the owner is `workspace`. This means the bot is for an internal integration."
                                                          }
                                                        },
                                                        "required": ["workspace"],
                                                        "additionalProperties": false
                                                      }
                                                    ]
                                                  },
                                                  "workspace_name": {
                                                    "type": ["string", "null"],
                                                    "description": "The name of the bot's workspace."
                                                  },
                                                  "workspace_limits": {
                                                    "type": "object",
                                                    "properties": {
                                                      "max_file_upload_size_in_bytes": {
                                                        "type": "integer",
                                                        "description": "The maximum allowable size of a file upload, in bytes"
                                                      }
                                                    },
                                                    "required": ["max_file_upload_size_in_bytes"],
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "required": ["bot"],
                                            "additionalProperties": false
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "description": "Details of the user mention."
                              }
                            },
                            "required": ["user"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["date"]
                              },
                              "date": {
                                "type": "object",
                                "properties": {
                                  "start": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "The start date of the date object."
                                  },
                                  "end": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "format": "date"
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "description": "The end date of the date object, if any."
                                  },
                                  "time_zone": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "minLength": 2,
                                        "maxLength": 32
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "description": "The time zone of the date object, if any. E.g. America/Los_Angeles, Europe/London, etc."
                                  }
                                },
                                "required": ["start"],
                                "additionalProperties": false
                              }
                            },
                            "required": ["date"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["page"]
                              },
                              "page": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": ["id"],
                                "additionalProperties": false,
                                "description": "Details of the page mention."
                              }
                            },
                            "required": ["page"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["database"]
                              },
                              "database": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": ["id"],
                                "additionalProperties": false,
                                "description": "Details of the database mention."
                              }
                            },
                            "required": ["database"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["template_mention"]
                              },
                              "template_mention": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": ["template_mention_date"]
                                      },
                                      "template_mention_date": {
                                        "type": "string",
                                        "enum": ["today", "now"],
                                        "description": "The date of the template mention."
                                      }
                                    },
                                    "required": ["template_mention_date"],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": ["template_mention_user"]
                                      },
                                      "template_mention_user": {
                                        "type": "string",
                                        "enum": ["me"],
                                        "description": "The user of the template mention."
                                      }
                                    },
                                    "required": ["template_mention_user"],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "required": ["template_mention"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["custom_emoji"]
                              },
                              "custom_emoji": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the custom emoji."
                                  },
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the custom emoji."
                                  }
                                },
                                "required": ["id"],
                                "additionalProperties": false,
                                "description": "Details of the custom emoji mention."
                              }
                            },
                            "required": ["custom_emoji"],
                            "additionalProperties": false
                          }
                        ],
                        "description": "Mention objects represent an inline mention of a database, date, link preview mention, page, template mention, or user. A mention is created in the Notion UI when a user types `@` followed by the name of the reference."
                      }
                    },
                    "required": ["mention"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["equation"]
                      },
                      "equation": {
                        "type": "object",
                        "properties": {
                          "expression": {
                            "type": "string",
                            "description": "A KaTeX compatible string."
                          }
                        },
                        "required": ["expression"],
                        "additionalProperties": false,
                        "description": "Notion supports inline LaTeX equations as rich text objects with a type value of `equation`."
                      }
                    },
                    "required": ["equation"],
                    "additionalProperties": false
                  }
                ]
              }
            ]
          },
          "maxItems": 100,
          "description": "The new title of the database, as a rich text object, if you want to update it."
        },
        "description": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "annotations": {
                    "type": "object",
                    "properties": {
                      "bold": {
                        "type": "boolean",
                        "description": "Whether the text is formatted as bold."
                      },
                      "italic": {
                        "type": "boolean",
                        "description": "Whether the text is formatted as italic."
                      },
                      "strikethrough": {
                        "type": "boolean",
                        "description": "Whether the text is formatted with a strikethrough."
                      },
                      "underline": {
                        "type": "boolean",
                        "description": "Whether the text is formatted with an underline."
                      },
                      "code": {
                        "type": "boolean",
                        "description": "Whether the text is formatted as code."
                      },
                      "color": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 18
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["text"]
                      },
                      "text": {
                        "type": "object",
                        "properties": {
                          "content": {
                            "type": "string",
                            "maxLength": 2000,
                            "description": "The actual text content of the text."
                          },
                          "link": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  }
                                },
                                "required": ["url"],
                                "additionalProperties": false
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "description": "An object with information about any inline link in this text, if included."
                          }
                        },
                        "required": ["content"],
                        "additionalProperties": false,
                        "description": "If a rich text object's type value is `text`, then the corresponding text field contains an object including the text content and any inline link."
                      }
                    },
                    "required": ["text"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["mention"]
                      },
                      "mention": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["user"]
                              },
                              "user": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "object": {
                                        "type": "string",
                                        "enum": ["user"],
                                        "description": "The user object type name."
                                      }
                                    },
                                    "required": ["id"],
                                    "additionalProperties": false
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": ["string", "null"],
                                            "description": "The name of the user."
                                          },
                                          "object": {
                                            "type": "string",
                                            "enum": ["user"],
                                            "description": "The user object type name."
                                          },
                                          "avatar_url": {
                                            "type": ["string", "null"],
                                            "description": "The avatar URL of the user."
                                          }
                                        },
                                        "required": ["id"]
                                      },
                                      {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": ["person"]
                                              },
                                              "person": {
                                                "type": "object",
                                                "properties": {
                                                  "email": {
                                                    "type": "string",
                                                    "description": "The email of the person."
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "required": ["person"],
                                            "additionalProperties": false
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": ["bot"]
                                              },
                                              "bot": {
                                                "type": "object",
                                                "properties": {
                                                  "owner": {
                                                    "anyOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "user": {
                                                            "anyOf": [
                                                              {
                                                                "type": "object",
                                                                "properties": {
                                                                  "email": {
                                                                    "type": "string",
                                                                    "description": "The email of the person."
                                                                  }
                                                                },
                                                                "required": ["email"],
                                                                "additionalProperties": false
                                                              },
                                                              {
                                                                "type": "object",
                                                                "properties": {
                                                                  "id": {
                                                                    "type": "string"
                                                                  },
                                                                  "object": {
                                                                    "type": "string",
                                                                    "enum": ["user"],
                                                                    "description": "The user object type name."
                                                                  }
                                                                },
                                                                "required": ["id"],
                                                                "additionalProperties": false
                                                              }
                                                            ],
                                                            "description": "Details about the owner of the bot, when the `type` of the owner is `user`. This means the bot is for a public integration."
                                                          }
                                                        },
                                                        "required": ["user"],
                                                        "additionalProperties": false
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "workspace": {
                                                            "type": "string",
                                                            "enum": ["true"],
                                                            "description": "Details about the owner of the bot, when the `type` of the owner is `workspace`. This means the bot is for an internal integration."
                                                          }
                                                        },
                                                        "required": ["workspace"],
                                                        "additionalProperties": false
                                                      }
                                                    ]
                                                  },
                                                  "workspace_name": {
                                                    "type": ["string", "null"],
                                                    "description": "The name of the bot's workspace."
                                                  },
                                                  "workspace_limits": {
                                                    "type": "object",
                                                    "properties": {
                                                      "max_file_upload_size_in_bytes": {
                                                        "type": "integer",
                                                        "description": "The maximum allowable size of a file upload, in bytes"
                                                      }
                                                    },
                                                    "required": ["max_file_upload_size_in_bytes"],
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "required": ["bot"],
                                            "additionalProperties": false
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "description": "Details of the user mention."
                              }
                            },
                            "required": ["user"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["date"]
                              },
                              "date": {
                                "type": "object",
                                "properties": {
                                  "start": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "The start date of the date object."
                                  },
                                  "end": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "format": "date"
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "description": "The end date of the date object, if any."
                                  },
                                  "time_zone": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "minLength": 2,
                                        "maxLength": 32
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "description": "The time zone of the date object, if any. E.g. America/Los_Angeles, Europe/London, etc."
                                  }
                                },
                                "required": ["start"],
                                "additionalProperties": false
                              }
                            },
                            "required": ["date"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["page"]
                              },
                              "page": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": ["id"],
                                "additionalProperties": false,
                                "description": "Details of the page mention."
                              }
                            },
                            "required": ["page"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["database"]
                              },
                              "database": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": ["id"],
                                "additionalProperties": false,
                                "description": "Details of the database mention."
                              }
                            },
                            "required": ["database"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["template_mention"]
                              },
                              "template_mention": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": ["template_mention_date"]
                                      },
                                      "template_mention_date": {
                                        "type": "string",
                                        "enum": ["today", "now"],
                                        "description": "The date of the template mention."
                                      }
                                    },
                                    "required": ["template_mention_date"],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": ["template_mention_user"]
                                      },
                                      "template_mention_user": {
                                        "type": "string",
                                        "enum": ["me"],
                                        "description": "The user of the template mention."
                                      }
                                    },
                                    "required": ["template_mention_user"],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "required": ["template_mention"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["custom_emoji"]
                              },
                              "custom_emoji": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the custom emoji."
                                  },
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the custom emoji."
                                  }
                                },
                                "required": ["id"],
                                "additionalProperties": false,
                                "description": "Details of the custom emoji mention."
                              }
                            },
                            "required": ["custom_emoji"],
                            "additionalProperties": false
                          }
                        ],
                        "description": "Mention objects represent an inline mention of a database, date, link preview mention, page, template mention, or user. A mention is created in the Notion UI when a user types `@` followed by the name of the reference."
                      }
                    },
                    "required": ["mention"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["equation"]
                      },
                      "equation": {
                        "type": "object",
                        "properties": {
                          "expression": {
                            "type": "string",
                            "description": "A KaTeX compatible string."
                          }
                        },
                        "required": ["expression"],
                        "additionalProperties": false,
                        "description": "Notion supports inline LaTeX equations as rich text objects with a type value of `equation`."
                      }
                    },
                    "required": ["equation"],
                    "additionalProperties": false
                  }
                ]
              }
            ]
          },
          "maxItems": 100,
          "description": "The new description of the database, as a rich text object, if you want to update it."
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "anyOf": [
              {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the property."
                      },
                      "description": {
                        "anyOf": [
                          {
                            "type": "string",
                            "maxLength": 280
                          },
                          {
                            "type": "null"
                          }
                        ],
                        "description": "The description of the property."
                      }
                    }
                  },
                  {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["number"]
                          },
                          "number": {
                            "type": "object",
                            "properties": {
                              "format": {
                                "type": "string",
                                "minLength": 3,
                                "maxLength": 18
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "required": ["number"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["formula"]
                          },
                          "formula": {
                            "type": "object",
                            "properties": {
                              "expression": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "required": ["formula"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["select"]
                          },
                          "select": {
                            "type": "object",
                            "properties": {
                              "options": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "color": {
                                          "type": "string",
                                          "enum": [
                                            "default",
                                            "gray",
                                            "brown",
                                            "orange",
                                            "yellow",
                                            "green",
                                            "blue",
                                            "purple",
                                            "pink",
                                            "red"
                                          ]
                                        },
                                        "description": {
                                          "type": ["string", "null"]
                                        }
                                      },
                                      "required": ["name"]
                                    },
                                    {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "id": {
                                              "type": "string"
                                            }
                                          },
                                          "required": ["name"],
                                          "additionalProperties": false
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            }
                                          },
                                          "required": ["id"],
                                          "additionalProperties": false
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "maxItems": 100
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "required": ["select"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["multi_select"]
                          },
                          "multi_select": {
                            "type": "object",
                            "properties": {
                              "options": {
                                "type": "array",
                                "items": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        },
                                        "color": {
                                          "type": "string",
                                          "enum": [
                                            "default",
                                            "gray",
                                            "brown",
                                            "orange",
                                            "yellow",
                                            "green",
                                            "blue",
                                            "purple",
                                            "pink",
                                            "red"
                                          ]
                                        },
                                        "description": {
                                          "type": ["string", "null"]
                                        }
                                      },
                                      "required": ["name"]
                                    },
                                    {
                                      "anyOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "name": {
                                              "type": "string"
                                            },
                                            "id": {
                                              "type": "string"
                                            }
                                          },
                                          "required": ["name"],
                                          "additionalProperties": false
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            }
                                          },
                                          "required": ["id"],
                                          "additionalProperties": false
                                        }
                                      ]
                                    }
                                  ]
                                },
                                "maxItems": 100
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "required": ["multi_select"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["status"]
                          },
                          "status": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false
                          }
                        },
                        "required": ["status"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["relation"]
                          },
                          "relation": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "database_id": {
                                    "type": "string"
                                  }
                                },
                                "required": ["database_id"]
                              },
                              {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "single_property": {
                                        "type": "object",
                                        "properties": {},
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": ["single_property"],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "dual_property": {
                                        "type": "object",
                                        "properties": {
                                          "synced_property_id": {
                                            "type": "string"
                                          },
                                          "synced_property_name": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "required": ["dual_property"],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "required": ["relation"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["rollup"]
                          },
                          "rollup": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "function": {
                                    "type": "string",
                                    "minLength": 3,
                                    "maxLength": 17
                                  }
                                },
                                "required": ["function"]
                              },
                              {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "relation_property_name": {
                                        "type": "string"
                                      },
                                      "rollup_property_name": {
                                        "type": "string"
                                      }
                                    },
                                    "required": ["relation_property_name", "rollup_property_name"],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "relation_property_id": {
                                        "type": "string"
                                      },
                                      "rollup_property_name": {
                                        "type": "string"
                                      }
                                    },
                                    "required": ["relation_property_id", "rollup_property_name"],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "relation_property_name": {
                                        "type": "string"
                                      },
                                      "rollup_property_id": {
                                        "type": "string"
                                      }
                                    },
                                    "required": ["relation_property_name", "rollup_property_id"],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "relation_property_id": {
                                        "type": "string"
                                      },
                                      "rollup_property_id": {
                                        "type": "string"
                                      }
                                    },
                                    "required": ["relation_property_id", "rollup_property_id"],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "required": ["rollup"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["unique_id"]
                          },
                          "unique_id": {
                            "type": "object",
                            "properties": {
                              "prefix": {
                                "type": ["string", "null"]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "required": ["unique_id"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["title"]
                          },
                          "title": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false
                          }
                        },
                        "required": ["title"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["rich_text"]
                          },
                          "rich_text": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false
                          }
                        },
                        "required": ["rich_text"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["url"]
                          },
                          "url": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false
                          }
                        },
                        "required": ["url"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["people"]
                          },
                          "people": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false
                          }
                        },
                        "required": ["people"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["files"]
                          },
                          "files": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false
                          }
                        },
                        "required": ["files"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["email"]
                          },
                          "email": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false
                          }
                        },
                        "required": ["email"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["phone_number"]
                          },
                          "phone_number": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false
                          }
                        },
                        "required": ["phone_number"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["date"]
                          },
                          "date": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false
                          }
                        },
                        "required": ["date"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["checkbox"]
                          },
                          "checkbox": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false
                          }
                        },
                        "required": ["checkbox"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["created_by"]
                          },
                          "created_by": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false
                          }
                        },
                        "required": ["created_by"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["created_time"]
                          },
                          "created_time": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false
                          }
                        },
                        "required": ["created_time"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["last_edited_by"]
                          },
                          "last_edited_by": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false
                          }
                        },
                        "required": ["last_edited_by"],
                        "additionalProperties": false
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": ["last_edited_time"]
                          },
                          "last_edited_time": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": false
                          }
                        },
                        "required": ["last_edited_time"],
                        "additionalProperties": false
                      }
                    ]
                  }
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The new name of the property."
                  }
                },
                "required": ["name"],
                "additionalProperties": false
              },
              {
                "type": "null"
              }
            ]
          },
          "description": "Updates to make to the database's schema. Use null to remove a property, or provide the `name` only to rename a property."
        },
        "is_inline": {
          "type": "boolean",
          "description": "Whether the database should be displayed inline in the parent page, if you want to change this setting."
        },
        "in_trash": {
          "type": "boolean",
          "description": "Whether to move the database to the trash. WARNING: This operation currently cannot be undone without going to the Notion app UI. Make sure you want to do this before proceeding."
        }
      },
      "required": ["database_id"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "NOTION__CREATE_COMMENT",
    "description": "Add a comment to a page",
    "tags": [],
    "tool_metadata": {
      "canonical_tool_name": "create-comment",
      "canonical_tool_description_hash": "edb9177d9556d8518de283756987b68514cc71861cff565a348fbc4ec02d01a9",
      "canonical_tool_input_schema_hash": "c8ff48c3c1e08610d07795d3519c5dfdc146a29522553c14049acd6599074cce"
    },
    "input_schema": {
      "type": "object",
      "properties": {
        "parent": {
          "type": "object",
          "properties": {
            "page_id": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": ["page_id"]
            }
          },
          "required": ["page_id"],
          "additionalProperties": false,
          "description": "The parent of the comment. This must be a page."
        },
        "rich_text": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "annotations": {
                    "type": "object",
                    "properties": {
                      "bold": {
                        "type": "boolean",
                        "description": "Whether the text is formatted as bold."
                      },
                      "italic": {
                        "type": "boolean",
                        "description": "Whether the text is formatted as italic."
                      },
                      "strikethrough": {
                        "type": "boolean",
                        "description": "Whether the text is formatted with a strikethrough."
                      },
                      "underline": {
                        "type": "boolean",
                        "description": "Whether the text is formatted with an underline."
                      },
                      "code": {
                        "type": "boolean",
                        "description": "Whether the text is formatted as code."
                      },
                      "color": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 18
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              {
                "anyOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["text"]
                      },
                      "text": {
                        "type": "object",
                        "properties": {
                          "content": {
                            "type": "string",
                            "maxLength": 2000,
                            "description": "The actual text content of the text."
                          },
                          "link": {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the link."
                                  }
                                },
                                "required": ["url"],
                                "additionalProperties": false
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "description": "An object with information about any inline link in this text, if included."
                          }
                        },
                        "required": ["content"],
                        "additionalProperties": false,
                        "description": "If a rich text object's type value is `text`, then the corresponding text field contains an object including the text content and any inline link."
                      }
                    },
                    "required": ["text"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["mention"]
                      },
                      "mention": {
                        "anyOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["user"]
                              },
                              "user": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "object": {
                                        "type": "string",
                                        "enum": ["user"],
                                        "description": "The user object type name."
                                      }
                                    },
                                    "required": ["id"],
                                    "additionalProperties": false
                                  },
                                  {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": ["string", "null"],
                                            "description": "The name of the user."
                                          },
                                          "object": {
                                            "type": "string",
                                            "enum": ["user"],
                                            "description": "The user object type name."
                                          },
                                          "avatar_url": {
                                            "type": ["string", "null"],
                                            "description": "The avatar URL of the user."
                                          }
                                        },
                                        "required": ["id"]
                                      },
                                      {
                                        "anyOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": ["person"]
                                              },
                                              "person": {
                                                "type": "object",
                                                "properties": {
                                                  "email": {
                                                    "type": "string",
                                                    "description": "The email of the person."
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "required": ["person"],
                                            "additionalProperties": false
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": ["bot"]
                                              },
                                              "bot": {
                                                "type": "object",
                                                "properties": {
                                                  "owner": {
                                                    "anyOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "user": {
                                                            "anyOf": [
                                                              {
                                                                "type": "object",
                                                                "properties": {
                                                                  "email": {
                                                                    "type": "string",
                                                                    "description": "The email of the person."
                                                                  }
                                                                },
                                                                "required": ["email"],
                                                                "additionalProperties": false
                                                              },
                                                              {
                                                                "type": "object",
                                                                "properties": {
                                                                  "id": {
                                                                    "type": "string"
                                                                  },
                                                                  "object": {
                                                                    "type": "string",
                                                                    "enum": ["user"],
                                                                    "description": "The user object type name."
                                                                  }
                                                                },
                                                                "required": ["id"],
                                                                "additionalProperties": false
                                                              }
                                                            ],
                                                            "description": "Details about the owner of the bot, when the `type` of the owner is `user`. This means the bot is for a public integration."
                                                          }
                                                        },
                                                        "required": ["user"],
                                                        "additionalProperties": false
                                                      },
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "workspace": {
                                                            "type": "string",
                                                            "enum": ["true"],
                                                            "description": "Details about the owner of the bot, when the `type` of the owner is `workspace`. This means the bot is for an internal integration."
                                                          }
                                                        },
                                                        "required": ["workspace"],
                                                        "additionalProperties": false
                                                      }
                                                    ]
                                                  },
                                                  "workspace_name": {
                                                    "type": ["string", "null"],
                                                    "description": "The name of the bot's workspace."
                                                  },
                                                  "workspace_limits": {
                                                    "type": "object",
                                                    "properties": {
                                                      "max_file_upload_size_in_bytes": {
                                                        "type": "integer",
                                                        "description": "The maximum allowable size of a file upload, in bytes"
                                                      }
                                                    },
                                                    "required": ["max_file_upload_size_in_bytes"],
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "required": ["bot"],
                                            "additionalProperties": false
                                          }
                                        ]
                                      }
                                    ]
                                  }
                                ],
                                "description": "Details of the user mention."
                              }
                            },
                            "required": ["user"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["date"]
                              },
                              "date": {
                                "type": "object",
                                "properties": {
                                  "start": {
                                    "type": "string",
                                    "format": "date",
                                    "description": "The start date of the date object."
                                  },
                                  "end": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "format": "date"
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "description": "The end date of the date object, if any."
                                  },
                                  "time_zone": {
                                    "anyOf": [
                                      {
                                        "type": "string",
                                        "minLength": 2,
                                        "maxLength": 32
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ],
                                    "description": "The time zone of the date object, if any. E.g. America/Los_Angeles, Europe/London, etc."
                                  }
                                },
                                "required": ["start"],
                                "additionalProperties": false
                              }
                            },
                            "required": ["date"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["page"]
                              },
                              "page": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": ["id"],
                                "additionalProperties": false,
                                "description": "Details of the page mention."
                              }
                            },
                            "required": ["page"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["database"]
                              },
                              "database": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": ["id"],
                                "additionalProperties": false,
                                "description": "Details of the database mention."
                              }
                            },
                            "required": ["database"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["template_mention"]
                              },
                              "template_mention": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": ["template_mention_date"]
                                      },
                                      "template_mention_date": {
                                        "type": "string",
                                        "enum": ["today", "now"],
                                        "description": "The date of the template mention."
                                      }
                                    },
                                    "required": ["template_mention_date"],
                                    "additionalProperties": false
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": ["template_mention_user"]
                                      },
                                      "template_mention_user": {
                                        "type": "string",
                                        "enum": ["me"],
                                        "description": "The user of the template mention."
                                      }
                                    },
                                    "required": ["template_mention_user"],
                                    "additionalProperties": false
                                  }
                                ]
                              }
                            },
                            "required": ["template_mention"],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": ["custom_emoji"]
                              },
                              "custom_emoji": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the custom emoji."
                                  },
                                  "url": {
                                    "type": "string",
                                    "description": "The URL of the custom emoji."
                                  }
                                },
                                "required": ["id"],
                                "additionalProperties": false,
                                "description": "Details of the custom emoji mention."
                              }
                            },
                            "required": ["custom_emoji"],
                            "additionalProperties": false
                          }
                        ],
                        "description": "Mention objects represent an inline mention of a database, date, link preview mention, page, template mention, or user. A mention is created in the Notion UI when a user types `@` followed by the name of the reference."
                      }
                    },
                    "required": ["mention"],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": ["equation"]
                      },
                      "equation": {
                        "type": "object",
                        "properties": {
                          "expression": {
                            "type": "string",
                            "description": "A KaTeX compatible string."
                          }
                        },
                        "required": ["expression"],
                        "additionalProperties": false,
                        "description": "Notion supports inline LaTeX equations as rich text objects with a type value of `equation`."
                      }
                    },
                    "required": ["equation"],
                    "additionalProperties": false
                  }
                ]
              }
            ]
          },
          "maxItems": 100,
          "description": "An array of rich text objects that represent the content of the comment."
        }
      },
      "required": ["parent", "rich_text"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "NOTION__GET_COMMENTS",
    "description": "Get all comments of a page",
    "tags": [],
    "tool_metadata": {
      "canonical_tool_name": "get-comments",
      "canonical_tool_description_hash": "fd81d3b6682ba309fca7c1de5971b179b1de6b2ca7af656b4602915a1c2d8cf7",
      "canonical_tool_input_schema_hash": "2504ac262828a39fd5802ee1101eb11ae392f741a31ab9969dd5e23830bbff98"
    },
    "input_schema": {
      "type": "object",
      "properties": {
        "page_id": {
          "type": "string",
          "description": "Identifier for a Notion page."
        }
      },
      "required": ["page_id"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "NOTION__GET_USERS",
    "description": "List all users",
    "tags": [],
    "tool_metadata": {
      "canonical_tool_name": "get-users",
      "canonical_tool_description_hash": "43320051235d3da2c9855ff4a28c923b4c5039cdc77e15db3d7909b96aa12405",
      "canonical_tool_input_schema_hash": "82f062b1fdf22f01fec3b81ad149480f74c7e34e52d54d160a14c823c923ae6e"
    },
    "input_schema": {
      "type": "object",
      "properties": {
        "query": {
          "type": "object",
          "properties": {
            "start_cursor": {
              "type": "string"
            },
            "page_size": {
              "type": "number"
            }
          },
          "additionalProperties": false
        }
      },
      "required": ["query"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "NOTION__GET_SELF",
    "description": "Retrieve your token's bot user",
    "tags": [],
    "tool_metadata": {
      "canonical_tool_name": "get-self",
      "canonical_tool_description_hash": "97ac25b46b29d0f7a5d22972e8b8339eebc556d681ba5a39244e626abd3802fd",
      "canonical_tool_input_schema_hash": "f973399805c1c233633f5196cf8e2ad40ee100b94996d711dcd030813b671bc5"
    },
    "input_schema": {
      "type": "object",
      "properties": {},
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "NOTION__GET_USER",
    "description": "Retrieve a user",
    "tags": [],
    "tool_metadata": {
      "canonical_tool_name": "get-user",
      "canonical_tool_description_hash": "ca8560e2dac5cb314c3f20e720f07a3a667ac2b6a4719f2a4d507bc825fe8d40",
      "canonical_tool_input_schema_hash": "3197cabfa9ff056cbdf87102509c36bd6688203558c39af209397c09fbfd2b18"
    },
    "input_schema": {
      "type": "object",
      "properties": {
        "path": {
          "type": "object",
          "properties": {
            "user_id": {
              "type": "string"
            }
          },
          "required": ["user_id"],
          "additionalProperties": false
        }
      },
      "required": ["path"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  }
]
