[
  {
    "name": "FIREFLIES__GET_TRANSCRIPT",
    "description": "Fetches detailed meeting transcript by ID, with optional field filtering. Returns transcript content (sentences, speakers) and metadata, but excludes summary data. If you need summary data, use get_summary instead.",
    "tags": [],
    "tool_metadata": {
      "canonical_tool_name": "get_transcript",
      "canonical_tool_description_hash": "1fe61ca1847fab6d36467189e04f895233a4a52e20998a7f49f4b2b6872c2c5a",
      "canonical_tool_input_schema_hash": "ffbd8f62abe6377b4074e63a2c1f5905ce59aa085b82793f0bd3867f7c1be0f3"
    },
    "input_schema": {
      "type": "object",
      "properties": {
        "transcriptId": {
          "type": "string",
          "description": "The meeting ID to fetch"
        },
        "filter": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional array of GraphQL field selections to filter the transcript data. Each string represents a top-level field or nested field path from the Fireflies GraphQL schema.\nAvailable fields:\n- Basic info: \"id\", \"title\", \"dateString\", \"privacy\", \"duration\", \"date\"\n- Speakers: \"speakers { id name }\"\n- Sentences: \"sentences { index speaker_name text start_time }\"\n- Meeting info: \"host_email\", \"organizer_email\", \"calendar_id\", \"cal_id\", \"calendar_type\", \"meeting_link\"\n- Participants: \"fireflies_users\", \"participants\", \"meeting_attendees { email }\"\n- URLs: \"transcript_url\", \"audio_url\", \"video_url\"\n\nExample: [\"id\", \"title\", \"speakers { id name }\", \"sentences { index speaker_name text start_time }\"]\nIf not provided, defaults to transcript fields only (no summary data)."
        }
      },
      "required": ["transcriptId"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "FIREFLIES__GET_SUMMARY",
    "description": "Fetches meeting summary by ID, with optional field filtering. Returns summary data (keywords, action items, overview, etc.) and basic metadata, but excludes transcript content. If you need transcript content, use get_transcript instead.",
    "tags": [],
    "tool_metadata": {
      "canonical_tool_name": "get_summary",
      "canonical_tool_description_hash": "79246b618d06bd2947f97e2b6019e936ccc24789d18860972a29680e98fc1403",
      "canonical_tool_input_schema_hash": "7d62f6361f6714ec15132813a8e18ce4279d694246008a5b1eed94ed80ae8fe2"
    },
    "input_schema": {
      "type": "object",
      "properties": {
        "transcriptId": {
          "type": "string",
          "description": "The meeting ID to fetch summary for"
        },
        "filter": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional array of GraphQL field selections to filter the summary data. Each string represents a top-level field or nested field path from the Fireflies GraphQL schema.\nAvailable fields (excludes transcript content):\n- Basic info: \"id\", \"title\", \"dateString\", \"date\", \"duration\"\n- Meeting info: \"host_email\", \"organizer_email\"\n- Summary: \"summary { keywords action_items outline shorthand_bullet overview bullet_gist gist short_summary short_overview meeting_type topics_discussed transcript_chapters }\"\n\nExample: [\"id\", \"title\", \"summary { keywords action_items overview }\"]\nIf not provided, defaults to summary fields only (no transcript content)."
        }
      },
      "required": ["transcriptId"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "FIREFLIES__GET_TRANSCRIPTS",
    "description": "Queries multiple meeting transcripts using filter properties (date, keyword, email, etc.). Returns transcriptId + transcript + summaries as needed. Does NOT accept transcriptId as input - use get_transcript() multiple times if you have specific transcript IDs.",
    "tags": [],
    "tool_metadata": {
      "canonical_tool_name": "get_transcripts",
      "canonical_tool_description_hash": "1ff881d7beb9717e7308ee41a3289e5317542ac62d7eab8f559b4e4da5e1763c",
      "canonical_tool_input_schema_hash": "0c1d6ae5b76b5fd185ade1a067b74a665476a6340d8ccd1c37e636610e9ef10c"
    },
    "input_schema": {
      "type": "object",
      "properties": {
        "keyword": {
          "type": "string",
          "maxLength": 255,
          "description": "Optional keyword to search for in meeting content"
        },
        "scope": {
          "type": "string",
          "enum": ["title", "sentences", "all"],
          "description": "Optional scope for keyword search: \"title\" (meeting titles only), \"sentences\" (transcript content), or \"all\" (both)"
        },
        "fromDate": {
          "type": "string",
          "description": "Optional ISO 8601 date string (e.g., \"2023-01-01\") to filter meetings from this date"
        },
        "toDate": {
          "type": "string",
          "description": "Optional ISO 8601 date string (e.g., \"2023-12-31\") to filter meetings until this date"
        },
        "date": {
          "type": "number",
          "description": "Optional date filter (deprecated)"
        },
        "limit": {
          "type": "number",
          "maximum": 50,
          "description": "Optional limit for the number of meetings to return (max 50)"
        },
        "skip": {
          "type": "number",
          "description": "Optional number of meetings to skip for pagination"
        },
        "host_email": {
          "type": "string",
          "description": "Optional filter by meeting host email"
        },
        "organizer_email": {
          "type": "string",
          "description": "Optional filter by meeting organizer email"
        },
        "participant_email": {
          "type": "string",
          "description": "Optional filter by meeting participant email"
        },
        "user_id": {
          "type": "string",
          "description": "Optional filter by user ID"
        },
        "mine": {
          "type": "boolean",
          "description": "Optional filter to only include meetings owned by the authenticated user"
        },
        "filter": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional array of GraphQL field selections to filter the transcript data. Each string represents a top-level field or nested field path from the Fireflies GraphQL schema.\nAvailable fields:\n- Basic info: \"id\", \"title\", \"duration\", \"date\"\n- Speakers: \"speakers { id name }\"\n- Sentences: \"sentences { index speaker_name text start_time }\"\n- Meeting info: \"host_email\", \"organizer_email\", \"calendar_id\", \"cal_id\", \"calendar_type\", \"meeting_link\"\n- Participants: \"fireflies_users\", \"participants\", \"meeting_attendees { email }\"\n- URLs: \"transcript_url\", \"audio_url\", \"video_url\"\n- Summary: \"summary { keywords action_items outline shorthand_bullet overview bullet_gist gist short_summary short_overview meeting_type topics_discussed transcript_chapters }\"\n\nExample: [\"id\", \"title\", \"privacy\", \"dateString\"]\nIf not provided, returns basic transcript information (['id', 'title'])."
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "FIREFLIES__GET_USER",
    "description": "Fetches user account details. Returns profile info, transcript counts, meeting activity, and admin status. If no user ID provided, returns current authenticated user data.",
    "tags": [],
    "tool_metadata": {
      "canonical_tool_name": "get_user",
      "canonical_tool_description_hash": "d03161f81a22d457935e652324d8b6a02fda8b3e1b38da65502a67e7714f552c",
      "canonical_tool_input_schema_hash": "21166428ef63ad0081f1a7b6a81410a9439e0780ee1e825a5458ca744a998314"
    },
    "input_schema": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "Optional user ID. If not provided, returns the current authenticated user's details."
        },
        "filter": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional array of GraphQL field selections to filter the user data. Each string represents a field from the Fireflies GraphQL schema.\nAvailable fields:\n- Basic info: \"user_id\", \"email\", \"name\", \"recent_meeting\", \"recent_transcript\", \"minutes_consumed\", \"is_admin\", \"integrations\"\n\nExample: [\"user_id\", \"email\", \"name\"]\nIf not provided, defaults to all available fields."
        }
      },
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "FIREFLIES__SEARCH",
    "description": "Advanced search for meeting transcripts using a mini grammar. Supports complex queries with multiple filters.\n\nGRAMMAR SYNTAX:\n- keyword:\"search term\" - Search for keywords in the content. If no scope is specified, the default scope is 'all'.\n- scope:title|sentences|all - Define the search scope. Options are 'title', 'sentences', or 'all'. The default is 'all'.\n- from:YYYY-MM-DD - Filter meetings from this date (ISO format)\n- to:YYYY-MM-DD - Filter meetings until this date (ISO format)\n- limit:N - Limit results (max 50)\n- skip:N - Skip N results for pagination\n- organizer_email:email@domain.com - Filter by meeting organizer\n- participant_email:email@domain.com - Filter by meeting participant\n- user:user_id - Filter by user ID\n- mine:true|false - Filter to only include user's own meetings\n\nEXAMPLES:\n- \"engineering standup\" (simple keyword search)\n- \"keyword:\\\"performance\\\" scope:sentences limit:20\"",
    "tags": [],
    "tool_metadata": {
      "canonical_tool_name": "search",
      "canonical_tool_description_hash": "59c999ac91c5b6946a997299c303d5db2a47a25d52a69d3ca990d0e04a81f858",
      "canonical_tool_input_schema_hash": "86df4ce7b304d94b930432b8bbf7cb6bed30dd3ac72ad81b34859cf1f3b0b085"
    },
    "input_schema": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "description": "Search query using the mini grammar syntax. Can be simple keywords or complex filters using the grammar."
        }
      },
      "required": ["query"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  },
  {
    "name": "FIREFLIES__FETCH",
    "description": "Retrieve complete meeting transcript with full conversation, metadata, and insights for a specific meeting ID. Use this after search to get detailed content.",
    "tags": [],
    "tool_metadata": {
      "canonical_tool_name": "fetch",
      "canonical_tool_description_hash": "73e139ec6cecfe3553874ddd5e16b5fda9137e50af944f54ab1341846abfcf63",
      "canonical_tool_input_schema_hash": "1711abd86527098339278a02ccbafcd68ff3f5b3d97f54129534e9727b12e306"
    },
    "input_schema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Meeting transcript ID obtained from search results"
        }
      },
      "required": ["id"],
      "additionalProperties": false,
      "$schema": "http://json-schema.org/draft-07/schema#"
    }
  }
]
