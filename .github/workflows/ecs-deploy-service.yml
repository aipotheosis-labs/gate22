name: Deploy Service
on:
  workflow_call:
    inputs:
      ecr_repository_url:
        type: string
        description: The ECR repository URL to use
        required: true
      image_tag:
        type: string
        description: The image tag to use
        required: true
      ecs_task_definition:
        type: string
        description: The ECS task definition to use
        required: true
      ecs_cluster:
        type: string
        description: The ECS cluster to deploy to
        required: true
      ecs_service:
        type: string
        description: The ECS service to deploy to
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.CICD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CICD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.CICD_AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Get the container name from the task definition
      # Note, modify this if we have more than one container
      - name: Get current task definition from ECS
        id: get-task-definition-container-name
        run: |
          CONTAINER_NAME=$(aws ecs describe-task-definition \
            --task-definition ${{ inputs.ecs_task_definition }} \
            --query taskDefinition.containerDefinitions[0].name \
            --output text)
          echo "CONTAINER_NAME=${CONTAINER_NAME}" >> $GITHUB_OUTPUT

      # Fetch task definition, and render it with the new image replaced
      # This outputs contains the path to the task definition JSON file
      # This does not update the task definition to AWS
      - name: Replace new Image to Task Definition JSON
        id: update-task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition-family: ${{ inputs.ecs_task_definition }}
          container-name: ${{ steps.get-task-definition-container-name.outputs.CONTAINER_NAME }}
          image: "${{ inputs.ecr_repository_url }}:${{ inputs.image_tag }}"

      # Register Task Definition in AWS and trigger a new deployment for the service
      - name: Deploy Service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.update-task-definition.outputs.task-definition }} # Path to the task definition JSON file
          service: ${{ inputs.ecs_service }}
          cluster: ${{ inputs.ecs_cluster }}
          wait-for-service-stability: true
          wait-for-minutes: 5
          force-new-deployment: true
